pipeline {
    agent none
    stages {
	// stage('Test docker') {
	//     agent any
	//     steps {
	// 	sh 'printenv'
	// 	sh 'ls -l /usr/local/bin'
	//     }
	// }
        stage('Build') {
            agent {
                docker {
                    image "maven:3-jdk-8"
                }
            }
            steps {
		sh 'printenv'
		sh "ls -l /usr/local/bin"
		sh "mvn install -Dmaven.test.failure.ignore"
            }
	    post {
		always {
//		    warnings canComputeNew: false, canResolveRelativePaths: false, categoriesPattern: '', consoleParsers: [[parserName: 'Maven'], [parserName: 'Java Compiler (javac)']], defaultEncoding: '', excludePattern: '', healthy: '', includePattern: '', messagesPattern: '', unHealthy: ''
		    junit "**/target/surefire-reports/*.xml"
		    jacoco()
		    cleanWs()
		}
	    }
        }
    }

    post {
//        always {
//            warnings canComputeNew: false, canResolveRelativePaths: false, categoriesPattern: '', consoleParsers: [[parserName: 'Maven'], [parserName: 'Java Compiler (javac)']], defaultEncoding: '', excludePattern: '', healthy: '', includePattern: '', messagesPattern: '', unHealthy: ''
//            junit "**/target/surefire-reports/*.xml"
//            jacoco()
//            cleanWs()
//        }

        unstable {
            emailext (
                subject: "Build unstable in Jenkins: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "Unstable job '${env.JOB_NAME}' #${env.BUILD_NUMBER}: check console output at ${env.BUILD_URL}.",
                recipientProviders:  [developers()]
            )
        }

        failure {
            emailext (
                subject: "Build failed in Jenkins: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "Failed job '${env.JOB_NAME}' #${env.BUILD_NUMBER}: check console output at ${env.BUILD_URL}.",
                recipientProviders:  [developers()]
            )
        }
    }
}
